/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package d_sop;

import controls.Database;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mdcc_dinesh
 */
public class item_reg extends javax.swing.JFrame {

    private static int edit_id = -1;

    /**
     * Creates new form other_registration
     */
    public item_reg() {
        initComponents();
        load_main_cat_combo();
        load_unit_cat_combo();

        //FULL SIZE PAGE *******************************************************
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        item_reg_tabale = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        unit_combo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        order = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        item_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        item_cod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sub_cat_combo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        main_cat_combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1004, 409));

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Item Registration");

        back.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        back.setForeground(new java.awt.Color(0, 204, 0));
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        item_reg_tabale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        item_reg_tabale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Code", "Name", "Re Order Level", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        item_reg_tabale.setRowHeight(25);
        item_reg_tabale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_reg_tabaleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(item_reg_tabale);
        if (item_reg_tabale.getColumnModel().getColumnCount() > 0) {
            item_reg_tabale.getColumnModel().getColumn(0).setMinWidth(0);
            item_reg_tabale.getColumnModel().getColumn(0).setPreferredWidth(0);
            item_reg_tabale.getColumnModel().getColumn(0).setMaxWidth(0);
            item_reg_tabale.getColumnModel().getColumn(1).setResizable(false);
            item_reg_tabale.getColumnModel().getColumn(2).setResizable(false);
            item_reg_tabale.getColumnModel().getColumn(3).setResizable(false);
            item_reg_tabale.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 153, 0));
        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 153, 0));
        jButton3.setText("UPDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("DELETE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Unit Type                     ");

        unit_combo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        unit_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Re Order Level             ");

        order.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Item Name                  ");

        item_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Item Code                   ");

        item_cod.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Sub Category             ");

        sub_cat_combo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sub_cat_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sub_cat_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sub_cat_comboActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Main Category             ");

        main_cat_combo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        main_cat_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        main_cat_combo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                main_cat_comboMouseClicked(evt);
            }
        });
        main_cat_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_cat_comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sub_cat_combo, 0, 269, Short.MAX_VALUE)
                        .addComponent(item_cod)
                        .addComponent(item_name)
                        .addComponent(order)
                        .addComponent(main_cat_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(unit_combo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {item_cod, item_name, order, sub_cat_combo});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(main_cat_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sub_cat_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(item_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(item_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(order, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unit_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {item_cod, item_name, main_cat_combo, order, sub_cat_combo, unit_combo});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Table load ***************************************************************
    private void item_reg_table() {
        //GET SUBCAT ID*********************************************************
        controls.ListItem cus2 = (controls.ListItem) sub_cat_combo.getSelectedItem();
        int sub_cat_combo_id = cus2.getId();

        try {
            ResultSet item_list = Database.getData("SELECT\n"
                    + "sub_category_id.sub_cat_name,\n"
                    + "main_category.`name`,\n"
                    + "sub_category_id.main_cat_id,\n"
                    + "sub_category_id.sub_cat_id,\n"
                    + "main_category.id,\n"
                    + "r_itm_reg.itm_code,\n"
                    + "r_itm_reg.itm_cat_id,\n"
                    + "r_itm_reg.itm_id,\n"
                    + "r_itm_reg.itm_name,\n"
                    + "r_itm_reg.itm_re_level,\n"
                    + "r_itm_reg.cell_price,\n"
                    + "r_itm_reg.cost_price,\n"
                    + "r_itm_reg.unit_type,\n"
                    + "r_itm_reg.discount_type,\n"
                    + "r_itm_reg.discount,\n"
                    + "unit.unit\n"
                    + "FROM\n"
                    + "main_category\n"
                    + "INNER JOIN sub_category_id ON sub_category_id.main_cat_id = main_category.id\n"
                    + "INNER JOIN r_itm_reg ON sub_category_id.sub_cat_id = r_itm_reg.itm_cat_id\n"
                    + "INNER JOIN unit ON unit.id = r_itm_reg.unit_type\n"
                    + "WHERE\n"
                    + "sub_category_id.sub_cat_id = '" + sub_cat_combo_id + "'\n"
                    + "ORDER BY\n"
                    + "sub_category_id.sub_cat_id DESC");

            DefaultTableModel tMOdel = (DefaultTableModel) item_reg_tabale.getModel();
            tMOdel.setRowCount(0);
            while (item_list.next()) {
                ArrayList arrList = new ArrayList();
                arrList.add(item_list.getString("itm_id"));
                arrList.add(item_list.getString("itm_code"));
                arrList.add(item_list.getString("itm_name"));
                arrList.add(item_list.getString("itm_re_level"));
                arrList.add(item_list.getString("unit"));
                tMOdel.addRow(arrList.toArray());
            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    // creat id and value combo ***********************************************
    public static ArrayList<controls.ListItem> getItemsForCombo(String query, String col_ID, String col_Name) throws Exception {
        ArrayList<controls.ListItem> names = new ArrayList<>();
        Statement stmt = Database.getCon().createStatement();
        ResultSet rset = stmt.executeQuery(query);
        while (rset.next()) {
            controls.ListItem item = new controls.ListItem();
            item.setId(rset.getInt(col_ID));
            item.setName(rset.getString(col_Name));
            names.add(item);
        }
        return names;
    }

//    load main category combo ***************************************************
    public void load_main_cat_combo() {
        try {
            String query = "SELECT main_category.`name`,main_category.id FROM main_category ORDER BY main_category.`name` DESC, main_category.id DESC";
            ArrayList<controls.ListItem> itemsList = getItemsForCombo(query, "id", "name");
            DefaultComboBoxModel def = new DefaultComboBoxModel(itemsList.toArray());
            main_cat_combo.setModel(def);
            load_sub_cat_combo();
            item_reg_table();
        } catch (Exception ex) {
        }
    }
//    load unit category combo ***************************************************

    public void load_unit_cat_combo() {
        try {
            String query = "SELECT\n"
                    + "unit.id,\n"
                    + "unit.unit\n"
                    + "FROM\n"
                    + "unit\n"
                    + "ORDER BY\n"
                    + "unit.id DESC";
            ArrayList<controls.ListItem> itemsList = getItemsForCombo(query, "id", "unit");
            DefaultComboBoxModel def = new DefaultComboBoxModel(itemsList.toArray());
            unit_combo.setModel(def);
        } catch (Exception ex) {
        }
    }
//    load sub category combo ***************************************************

    public void load_sub_cat_combo() {
        controls.ListItem cus = (controls.ListItem) main_cat_combo.getSelectedItem();
        int main_cat_combo_id = cus.getId();

        try {
            String query = "SELECT\n"
                    + "main_category.id,\n"
                    + "main_category.`name`,\n"
                    + "sub_category_id.sub_cat_id,\n"
                    + "sub_category_id.sub_cat_name,\n"
                    + "sub_category_id.main_cat_id\n"
                    + "FROM\n"
                    + "main_category\n"
                    + "INNER JOIN sub_category_id ON sub_category_id.main_cat_id = main_category.id\n"
                    + "WHERE\n"
                    + "sub_category_id.main_cat_id = '" + main_cat_combo_id + "'";
            ArrayList<controls.ListItem> itemsList = getItemsForCombo(query, "sub_cat_id", "sub_cat_name");
            DefaultComboBoxModel def = new DefaultComboBoxModel(itemsList.toArray());
            sub_cat_combo.setModel(def);
        } catch (Exception ex) {
        }
    }


    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.setVisible(false);
        home back_home = new home();
        back_home.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void main_cat_comboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_main_cat_comboMouseClicked

    }//GEN-LAST:event_main_cat_comboMouseClicked

    private void main_cat_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_cat_comboActionPerformed
        load_sub_cat_combo();
        item_reg_table();
    }//GEN-LAST:event_main_cat_comboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        controls.ListItem cus = (controls.ListItem) main_cat_combo.getSelectedItem();
        int main_cat_combo_id = cus.getId();
        controls.ListItem cus2 = (controls.ListItem) sub_cat_combo.getSelectedItem();
        int sub_cat_combo_id = cus2.getId();
        controls.ListItem cus3 = (controls.ListItem) unit_combo.getSelectedItem();
        int unit_cat_combo_id = cus3.getId();

        String i_code = item_cod.getText();
        String i_name = item_name.getText();
        String i_order = order.getText();

        if (i_code.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Item code not to be empty!", "Erro", JOptionPane.INFORMATION_MESSAGE);
        }
        if (i_name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name not to be empty!", "Erro", JOptionPane.INFORMATION_MESSAGE);
        }
        if (i_order.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Order level not to be empty!", "Erro", JOptionPane.INFORMATION_MESSAGE);
        } else {
            boolean add_item_reg = Database.putData("INSERT INTO `r_itm_reg` (`itm_cat_id`, `itm_code`, `itm_name`, `itm_re_level`, `cell_price`, `cost_price`, `unit_type`, `discount_type`, `discount`) VALUES ( '" + sub_cat_combo_id + "', '" + i_code + "', '" + i_name + "', '" + i_order + "', NULL, NULL, '" + unit_cat_combo_id + "', NULL, NULL);");
            if (add_item_reg) {
                JOptionPane.showMessageDialog(null, "successfully added !", "Successfull", JOptionPane.INFORMATION_MESSAGE);
                item_reg_table();

            } else {
                JOptionPane.showMessageDialog(null, "Erro Uploading !", "Erro", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Do you want to Update ?");

        //CHECK RETURN VAL FOR UPDATE ********************************************
        if (showConfirmDialog == 0) {
            controls.ListItem cus = (controls.ListItem) main_cat_combo.getSelectedItem();
            int main_cat_combo_id = cus.getId();
            controls.ListItem cus2 = (controls.ListItem) sub_cat_combo.getSelectedItem();
            int sub_cat_combo_id = cus2.getId();
            controls.ListItem cus3 = (controls.ListItem) unit_combo.getSelectedItem();
            int unit_cat_combo_id = cus3.getId();

            String i_code = item_cod.getText();
            String i_name = item_name.getText();
            String i_order = order.getText();
            
            if (i_code.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Item code not to be empty!", "Erro", JOptionPane.INFORMATION_MESSAGE);
            }
            if (i_name.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Name not to be empty!", "Erro", JOptionPane.INFORMATION_MESSAGE);
            }
            if (i_order.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Order level not to be empty!", "Erro", JOptionPane.INFORMATION_MESSAGE);
            }

            boolean update = Database.putData("UPDATE `r_itm_reg` SET  `itm_cat_id`='" + sub_cat_combo_id + "', `itm_code`='" + i_code + "', `itm_name`='" + i_name + "', `itm_re_level`='" + i_order + "', `cell_price`=NULL, `cost_price`=NULL, `unit_type`='" + unit_cat_combo_id + "', `discount_type`=NULL, `discount`=NULL WHERE (`itm_id`='" + edit_id + "');");
            if (update) {
                JOptionPane.showMessageDialog(null, "successfully Updated !", "Title", JOptionPane.INFORMATION_MESSAGE);
                item_reg_table();
            } else {
                JOptionPane.showMessageDialog(null, "Update  Errro !", "Title", JOptionPane.INFORMATION_MESSAGE);
                item_reg_table();
            }

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void item_reg_tabaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_reg_tabaleMouseClicked
        //GET TABALE ROW SELECTED VAL ******************************************
        int r;
        r = item_reg_tabale.getSelectedRow();
        String id = item_reg_tabale.getValueAt(r, 0).toString();
        String code = item_reg_tabale.getValueAt(r, 1).toString();
        String name = item_reg_tabale.getValueAt(r, 2).toString();
        String re_order = item_reg_tabale.getValueAt(r, 3).toString();

        //SET SELECTED VAL *****************************************************
        edit_id = Integer.parseInt(id);
        item_cod.setText(code);
        item_name.setText(name);
        order.setText(re_order);

    }//GEN-LAST:event_item_reg_tabaleMouseClicked

    private void sub_cat_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sub_cat_comboActionPerformed
        item_reg_table();
    }//GEN-LAST:event_sub_cat_comboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(item_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(item_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(item_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(item_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new item_reg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextField item_cod;
    private javax.swing.JTextField item_name;
    private javax.swing.JTable item_reg_tabale;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> main_cat_combo;
    private javax.swing.JTextField order;
    private javax.swing.JComboBox<String> sub_cat_combo;
    private javax.swing.JComboBox<String> unit_combo;
    // End of variables declaration//GEN-END:variables

    private void cus_reg_table() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
